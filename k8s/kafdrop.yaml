apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafkdrop
  namespace: kafka
  labels:
    app.kubernetes.io/name: kafkdrop
    app.kubernetes.io/instance: latest
    app.kubernetes.io/managed-by: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafdrop
      app.kubernetes.io/instance: latest
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafdrop
        app.kubernetes.io/instance: latest
      annotations:
spec:
  {{- if .Values.hostAliases }}
  hostAliases:
    {{ toYaml .Values.hostAliases | nindent 8 }}
  {{- end }}
  containers:
    - name: {{ .Chart.Name }}
      image: "obsidiandynamics/kafdrop:latest"
      imagePullPolicy: Always
      env:
        - name: KAFKA_BROKERCONNECT
          value: "kafka:9092"
        - name: KAFKA_PROPERTIES
          value: ""
        - name: KAFKA_TRUSTSTORE
          value: ""
        - name: KAFKA_KEYSTORE
          value: ""
        - name: JVM_OPTS
          value: ""
        - name: JMX_PORT
          value: 8686
        - name: HOST
          value: ""
        - name: SERVER_SERVLET_CONTEXTPATH
          value: "/"
        - name: KAFKA_PROPERTIES_FILE
          value: "kafka.properties"
        - name: KAFKA_TRUSTSTORE_FILE
          value: "kafka.truststore.jks"
        - name: KAFKA_KEYSTORE_FILE
          value: "kafka.keystore.jks"
        - name: SERVER_PORT
          value: "9000"
        - name: CMD_ARGS

value: ""

ports:
  - name: http
    containerPort: 9000
    protocol: TCP
livenessProbe:
  httpGet:
    path: "/actuator/health"
    port: http
  initialDelaySeconds: 180
  periodSeconds: 30
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: "/actuator/health"
    port: http
  initialDelaySeconds: 20
  periodSeconds: 5
  timeoutSeconds: 10
resources:
  requests:
    cpu: 1m
    memory: 128Mi
nodeSelector:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.affinity }}
affinity:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.tolerations }}
tolerations:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- if .Values.mountProtoDesc.enabled }}
volumeMounts:
  - mountPath: /protodesc/
    name: proto-desc
volumes:
  - name: proto-desc
    hostPath:
      path: {{ .Values.mountProtoDesc.hostPath }}
      type: Directory
  {{- end }}

